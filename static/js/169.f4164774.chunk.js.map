{"version":3,"file":"static/js/169.f4164774.chunk.js","mappings":"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","sources":["candidatos/infraestructure/loadCandidatos.ts","candidatos/application/consultarCandidatosThunk.ts","votopreferente/components/FilterForm.tsx","votopreferente/components/CandidatosEditable.tsx","resultados/infraestructure/loadResultados.ts","resultados/application/consultarResultadosThunk.ts","resultados/infraestructure/updateResultadoDB.ts","resultados/domain/updateResultadoThuks.ts","votopreferente/pages/VotoPreferentePage.tsx"],"sourcesContent":["import { collection, getDocs } from 'firebase/firestore/lite';\r\nimport { FirebaseDB } from '../../firebase/config';\r\nimport { Candidato } from './../domain/candidato.interface';\r\n\r\nexport const loadCandidatos = async () => {\r\n  if (!process.env.REACT_APP_CLIENTE_ID) throw new Error('El UID del cliente no existe');\r\n\r\n  const collectionRef = collection(FirebaseDB, `${process.env.REACT_APP_CLIENTE_ID}/elecciones/candidatos`);\r\n  const docs = await getDocs(collectionRef);\r\n\r\n  const candidatos: Candidato[] = [];\r\n  docs.forEach((doc) => {\r\n    candidatos.push(\r\n      { id: doc.id,\r\n        codigo: doc.data().codigo,\r\n        nombre: doc.data().nombre,\r\n      }\r\n    );\r\n  });\r\n\r\n  console.log(candidatos);\r\n  return candidatos;\r\n};\r\n","import { setCandidatos } from '..';\r\nimport { Dispatch } from 'redux';\r\nimport { loadCandidatos } from '../infraestructure/loadCandidatos';\r\n\r\nexport const consultarCandidatos = async (dispatch: Dispatch) => {\r\n    try {\r\n        const candidatos = await loadCandidatos();\r\n\r\n        dispatch(setCandidatos(candidatos));\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { Formik, Field, Form, ErrorMessage, useFormikContext } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport FilterInterface from '../interfaces/filterInterface';\r\n\r\nimport '../styles/styles.css';\r\n\r\n\r\ninterface FormProps {\r\n  onSubmit: (values: FilterInterface) => void;\r\n  initialZona: string;\r\n}\r\n\r\nconst FilterForm: React.FC<FormProps> = ({ onSubmit, initialZona  }) => {\r\n\r\n  return (\r\n    <div>\r\n\r\n        <Formik\r\n            enableReinitialize={true}        \r\n            initialValues = {{\r\n                zona: initialZona,\r\n                puesto: '',\r\n                mesa: '',\r\n            }}\r\n            onSubmit={ (values) => {\r\n                onSubmit(values)\r\n            }}\r\n            validationSchema = {Yup.object({\r\n                    zona: Yup.string()\r\n                                    .max(3, 'Debe de tener 3 caracteres o menos')\r\n                                    .required('Requerido'),\r\n                    puesto: Yup.string()\r\n                                .max(3, 'Debe de tener 3 caracteres o menos')\r\n                                .required('Requerido'),\r\n                    mesa: Yup.string()\r\n                                .max(3, 'La mesa no tiene el formato valido')\r\n                                .required('Requerido'),\r\n                })\r\n            }>\r\n            {(formik) => (\r\n                <Form>\r\n                    <label htmlFor=\"zona\">Zona</label>\r\n                    <Field name=\"zona\" type=\"text\" />\r\n                    <ErrorMessage name=\"zona\" component=\"span\" />\r\n        \r\n                    <label htmlFor=\"puesto\">Puesto</label>\r\n                    <Field name=\"puesto\" type=\"text\" />\r\n                    <ErrorMessage name=\"puesto\" component=\"span\" />\r\n        \r\n                    <label htmlFor=\"mesa\">Mesa</label>\r\n                    <Field name=\"mesa\" type=\"text\" />\r\n                    <ErrorMessage name=\"mesa\" component=\"span\" />\r\n        \r\n                    <button type=\"submit\">Buscar</button>\r\n                </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n    </div>    \r\n\r\n  );\r\n};\r\n\r\nexport default FilterForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  IconButton,\r\n  TextField,\r\n  Button,\r\n} from '@mui/material';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport { Candidato } from '../../candidatos/domain/candidato.interface';\r\n\r\n\r\ninterface EditableListProps {\r\n  candidatos: Candidato[];\r\n  onSave: (data: Candidato[]) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst CandidatosEditable: React.FC<EditableListProps> = ({ candidatos: data, onSave, onCancel }) => {\r\n  const [editedData, setEditedData] = useState<Candidato[]>([]);\r\n\r\n  const handleSave = () => {\r\n    onSave(editedData);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onCancel();\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    setEditedData(data)\r\n  }, [data]);\r\n\r\n  \r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, id: string) => {\r\n    const { name, value } = event.target;\r\n    const updatedData = editedData.map((item) =>\r\n      item.id === id ? { ...item, [name]: value } : item\r\n    );\r\n    setEditedData(updatedData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Codigo</TableCell>\r\n              <TableCell>Nombre</TableCell>\r\n              <TableCell>Votos PDF</TableCell>\r\n              <TableCell>Votos Reporte</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {editedData.map((item) => (\r\n              <TableRow key={item.id}>\r\n                <TableCell>{item.id}</TableCell>\r\n                <TableCell>{item.nombre}-{item.votospdf}-</TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                    name=\"votospdf\"\r\n                    value={item.votospdf}\r\n                    inputProps={{ maxLength: 3 }}\r\n                    onChange={(e) => handleChange(e, item.id)}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                    name=\"votosreporte\"\r\n                    value={item.votosreporte}\r\n                    inputProps={{ maxLength: 3 }}\r\n                    onChange={(e) => handleChange(e, item.id)}\r\n                  />\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        startIcon={<SaveIcon />}\r\n        onClick={handleSave}\r\n      >\r\n        Save\r\n      </Button>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        startIcon={<SaveIcon />}\r\n        onClick={handleCancel}\r\n      >\r\n        cancelar\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CandidatosEditable;\r\n","import { collection, getDocs, query, where } from 'firebase/firestore/lite';\r\nimport { FirebaseDB } from '../../firebase/config';\r\nimport { Resultado } from '../domain/resultado.interface';\r\n\r\nexport const loadResultados = async (zona: string, puesto: string, mesa: string) => {\r\n  if (!process.env.REACT_APP_CLIENTE_ID) throw new Error('El UID del cliente no existe');\r\n\r\n  const collectionRef = collection(FirebaseDB, `${process.env.REACT_APP_CLIENTE_ID}/elecciones/resultados`);\r\n  const q = query(collectionRef, where('zona', '==', zona), where('puesto', '==', puesto), where('mesa', '==', mesa));\r\n  const querySnapshot = await getDocs(q);\r\n\r\n  const resultados: Resultado[] = [];\r\n  querySnapshot.forEach((doc) => {\r\n    resultados.push({\r\n      id: doc.id,\r\n      zona: doc.data().zona,\r\n      puesto: doc.data().puesto,\r\n      mesa: doc.data().mesa,\r\n      candidato: doc.data().candidato,\r\n      votospdf: doc.data().votospdf,\r\n      votosreporte: doc.data().votosreporte,\r\n    });\r\n  });\r\n\r\n  console.log('Resul:', resultados, zona, puesto, mesa)\r\n  return resultados;\r\n};\r\n","import { setResultados } from '..';\r\nimport { Dispatch } from 'redux';\r\nimport { loadResultados } from '../infraestructure/loadResultados';\r\n\r\n\r\nexport const consultarResultados = async (dispatch: Dispatch, zona: string, puesto: string, mesa: string) => {\r\n    try {\r\n        const resultados = await loadResultados(zona, puesto, mesa);\r\n\r\n        dispatch(setResultados(resultados));\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n}\r\n","import { collection, doc, setDoc } from 'firebase/firestore/lite';\r\nimport { FirebaseDB } from '../../firebase/config';\r\nimport { Resultado } from '../domain/resultado.interface';\r\n\r\nexport const updateResultadoDB = async (resultado: Resultado) => {\r\n    try {\r\n        let resultadoDoc;\r\n        if (!resultado.id) {\r\n            resultadoDoc = doc( collection( FirebaseDB, `${process.env.REACT_APP_CLIENTE_ID}/elecciones/resultados`) );\r\n        } else {\r\n            resultadoDoc = doc(FirebaseDB, `${process.env.REACT_APP_CLIENTE_ID}/elecciones/resultados/${resultado.id}`);\r\n        }\r\n        await setDoc( resultadoDoc, \r\n            {\r\n                zona: resultado.zona,\r\n                puesto: resultado.puesto,\r\n                mesa: resultado.mesa,\r\n                candidato: resultado.candidato,\r\n                votospdf: Number(resultado.votospdf),\r\n                votosreporte: Number(resultado.votosreporte)\r\n            });\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n","import { updateResultadoDB } from '../infraestructure/updateResultadoDB';\r\nimport { Resultado } from './resultado.interface';\r\n\r\nexport const updateResultado = async (resultado: Resultado) => {\r\n    await updateResultadoDB(resultado);\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Typography } from '@mui/material';\r\nimport FilterInterface from '../interfaces/filterInterface';\r\nimport { consultarCandidatos } from '../../candidatos/application/consultarCandidatosThunk';\r\nimport { RootState } from '../../store';\r\n\r\nimport FilterForm from '../components/FilterForm';\r\nimport CandidatosEditable from '../components/CandidatosEditable';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { Candidato } from '../../candidatos/domain/candidato.interface';\r\nimport { consultarResultados } from '../../resultados/application/consultarResultadosThunk';\r\nimport { Resultado } from '../../resultados/domain/resultado.interface';\r\nimport { updateResultado } from '../../resultados/domain/updateResultadoThuks';\r\n\r\nconst VotoPreferentePage = () => {\r\n  const dispatch = useDispatch();\r\n  const [zona, setZona] = useState<string>('');\r\n  const [puesto, setPuesto] = useState<string>('');\r\n  const [mesa, setMesa] = useState<string>('');\r\n  const [candidatosSelected, setCandidatosSelected] = useState<Candidato[]>([]);\r\n\r\n  const { candidatos } = useSelector((state: RootState) => state.candidatos);\r\n\r\n  const { resultados } = useSelector((state: RootState) => state.resultados);\r\n\r\n  function inicializarResultadosEnCandidatos(resultados: Resultado[]) {\r\n    let candis: Candidato[] = []\r\n\r\n    candidatos.forEach((candidato) => {\r\n      const resultadoEncontrado = resultados.find((resultado) => resultado.candidato === candidato.id);\r\n\r\n      if (resultadoEncontrado) {\r\n        candis.push({\r\n          id: candidato.id,\r\n          codigo: resultadoEncontrado.candidato,\r\n          nombre: candidato.nombre,\r\n          votospdf: resultadoEncontrado.votospdf,\r\n          votosreporte: resultadoEncontrado.votosreporte,\r\n          resultado: resultadoEncontrado\r\n        })\r\n      } else {\r\n        candis.push({\r\n          id: candidato.id,\r\n          codigo: candidato.id,\r\n          nombre: candidato.nombre,\r\n        })\r\n      }\r\n    });\r\n\r\n    setCandidatosSelected(candis)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setCandidatosSelected([]);\r\n    setZona('')\r\n  }\r\n\r\n  const handleSaveData = (candis: Candidato[]) => {\r\n\r\n    candis.forEach(candi => {\r\n        let resultado : Resultado;\r\n\r\n        if (candi.resultado) {\r\n          resultado = {\r\n            ...candi.resultado,\r\n            candidato: candi.id || '',\r\n            votospdf: candi.votospdf || 0,\r\n            votosreporte: candi.votosreporte || 0\r\n          }\r\n        } else {\r\n          resultado = {\r\n            zona,\r\n            puesto,\r\n            mesa,\r\n            candidato: candi.id || '',\r\n            votospdf: candi.votospdf || 0,\r\n            votosreporte: candi.votosreporte || 0  \r\n          }\r\n        }\r\n\r\n        updateResultado(resultado);\r\n        setZona('')\r\n    });\r\n    setCandidatosSelected([]);\r\n  };\r\n\r\n  const handleFormSubmit = (values: FilterInterface) => {\r\n    setZona(values.zona)\r\n    setPuesto(values.puesto);\r\n    setMesa(values.mesa)\r\n\r\n    if (!values.zona || values.zona.length == 0) {\r\n      alert('No ha seleccionado una zona')\r\n      return;\r\n    }\r\n    setCandidatosSelected([])\r\n    consultarResultados(dispatch, values.zona, values.puesto, values.mesa);\r\n\r\n    console.log('Form submitted with values:', values);\r\n  };\r\n\r\n  useEffect(() => {\r\n    consultarCandidatos(dispatch);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('r', resultados)\r\n    inicializarResultadosEnCandidatos(resultados);\r\n  }, [resultados]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant='h4'>Voto preferente</Typography>\r\n      {\r\n        (zona && zona.length > 0 ) ?\r\n        <></>\r\n        :\r\n        <FilterForm onSubmit={handleFormSubmit} initialZona={ zona } />\r\n      }\r\n\r\n      {zona}\r\n      - { candidatosSelected.length }\r\n      - r: { resultados.length }\r\n      {\r\n        (zona && zona.length > 0 && candidatosSelected.length > 0) ?\r\n        <CandidatosEditable candidatos={candidatosSelected} onSave={handleSaveData} onCancel={ handleCancel }/>\r\n        :\r\n        <></>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VotoPreferentePage;\r\n"],"names":["loadCandidatos","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","collectionRef","docs","candidatos","wrap","_context","prev","next","collection","FirebaseDB","concat","process","getDocs","sent","forEach","doc","push","id","codigo","data","nombre","console","log","abrupt","stop","apply","arguments","consultarCandidatos","dispatch","setCandidatos","t0","error","_x","onSubmit","initialZona","_jsx","children","Formik","enableReinitialize","initialValues","zona","puesto","mesa","values","validationSchema","Yup","max","required","formik","_jsxs","Form","htmlFor","Field","name","type","ErrorMessage","component","onSave","onCancel","_useState","useState","_useState2","_slicedToArray","editedData","setEditedData","useEffect","handleChange","event","_event$target","target","value","updatedData","map","item","_objectSpread","_defineProperty","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","votospdf","TextField","inputProps","maxLength","onChange","e","votosreporte","Button","variant","color","startIcon","SaveIcon","onClick","loadResultados","q","querySnapshot","resultados","query","where","candidato","_x2","_x3","consultarResultados","setResultados","_x4","updateResultadoDB","resultado","resultadoDoc","setDoc","Number","updateResultado","useDispatch","setZona","_useState3","_useState4","setPuesto","_useState5","_useState6","setMesa","_useState7","_useState8","candidatosSelected","setCandidatosSelected","useSelector","state","candis","resultadoEncontrado","find","inicializarResultadosEnCandidatos","Typography","length","_Fragment","FilterForm","alert","CandidatosEditable","candi"],"sourceRoot":""}